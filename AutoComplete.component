<apex:component controller="AutoComplete">
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js'/>
<script src='https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/jquery-ui.min.js'/>
<apex:stylesheet value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/themes/smoothness/jquery-ui.css"/>
  
  <!-- Attributes Required For Component -->
  <apex:attribute name="objectname" description="The object name you want to look for." type="String" required="true"/>
  <apex:attribute name="searchfield" description="Field which will be used to search on" type="String" required="true"/>
  <apex:attribute name="additionalfield" description="Any additional fields you'd like to search and include in the display." type="String" required="false"/>
  <apex:attribute name="profilename" description="To filter on the basis of profile name and include in the display." type="String" required="false"/>
  <apex:attribute name="autocomplete_textbox" description="The ID for the Autocomplete List Textbox." type="String" required="true"/>
  <apex:attribute name="targetIdElement" description="The ID for the element which will be used to set selected record id to" type="String" required="false"/>
  
  <!-- CSS Style -->
  <style>
    .ui-autocomplete-loading {background: white url({!$Resource.circleIndicator}) right center no-repeat;}
  </style>

  <!-- Javascript -->

  <script type="text/javascript">

    var j$ = jQuery.noConflict();

    j$(document).ready(function() {
        var sObjects;
        var queryTerm;
        
        j$(esc('{!autocomplete_textbox}')).change(function(event){
            if($.trim($(this).val())===""){
                j$(esc('{!targetIdElement}')).val("");
            }
        });
        
        
        j$(esc('{!autocomplete_textbox}')).autocomplete({
            minLength: 1,
            source: function(request, response) {
	            queryTerm = request.term;
	            
	            Visualforce.remoting.Manager.invokeAction(
	                 '{!$RemoteAction.AutoComplete.findSObjects}',
	                 "{!objectname}", 
	                 request.term, 
	                 "{!searchfield}",
	                 "{!additionalfield}",
	                 "{!profilename}", 
	                    
	                 function(result, event){
	                     if (event.type === 'exception') {
	                        console.log('Exception',event.message); 
	                     } else {
	                     sObjects = result;
	                        response(sObjects);
	                     }
	                 }, 
	                 {escape: true}
	            );
            },

            focus: function( event, ui ) {
                    j$(esc('{!autocomplete_textbox}')).val( ui.item['{!searchfield}'] );

                    return false;
            },

            select: function( event, ui ) {
            
                 j$(esc('{!autocomplete_textbox}')).val( ui.item['{!searchfield}'] );
                 j$(esc('{!targetIdElement}')).val( ui.item.Id );
                 
                 if (event.keyCode == 13) { 
                     event.preventDefault();
                 }
                 return false;
             },
         })

         .data( "autocomplete" )._renderItem = function( ul, item ) {
         
            var entry = item['{!searchfield}'];

            if("{!additionalfield}" !='') {
                j$.each("{!additionalfield}".split(",") , function(key, value) {
                    entry = entry + " - " + item[value];
                });
            }

            entry = entry.replace( new RegExp( "(" + queryTerm + ")" , "gi" ), "<strong><u>$1</u></strong>" );

            return j$( "<li></li>" )
                .data( "item.autocomplete", item )
                .append( "<a>" + entry + "</a>")
                .appendTo( ul );
        };
    });

    function esc(myid) {
           return '#' + myid.replace(/(:|\.)/g,'\\\\$1');
    }

  </script>
</apex:component>
